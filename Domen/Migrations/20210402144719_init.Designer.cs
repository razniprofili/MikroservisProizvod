// <auto-generated />
using Domen;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domen.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210402144719_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domen.Dobavljac", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dobavljac");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Napomena = "Isporuka svakog prvog u mesecu.",
                            Naziv = "Maxi",
                            PIB = "11223344"
                        },
                        new
                        {
                            Id = 2L,
                            Naziv = "Dobavljac DOO",
                            PIB = "9874512"
                        },
                        new
                        {
                            Id = 3L,
                            Naziv = "Bio Spajz",
                            PIB = "9745123"
                        });
                });

            modelBuilder.Entity("Domen.JedinicaMere", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JedinicaMere");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Naziv = "Komad"
                        },
                        new
                        {
                            Id = 2L,
                            Naziv = "Kilogram"
                        },
                        new
                        {
                            Id = 3L,
                            Naziv = "Litar"
                        },
                        new
                        {
                            Id = 4L,
                            Naziv = "Gram"
                        });
                });

            modelBuilder.Entity("Domen.Proizvod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<long>("JedinicaMereId")
                        .HasColumnType("bigint");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pdv")
                        .HasColumnType("float");

                    b.Property<long>("TipProizvodaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("JedinicaMereId");

                    b.HasIndex("TipProizvodaId");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("Domen.ProizvodDobavljac", b =>
                {
                    b.Property<long>("DobavljacId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProizvodId")
                        .HasColumnType("bigint");

                    b.HasKey("DobavljacId", "ProizvodId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("ProizvodDobavljac");
                });

            modelBuilder.Entity("Domen.TipProizvoda", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipProizvoda");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Naziv = "Mlecni proizvod"
                        },
                        new
                        {
                            Id = 2L,
                            Naziv = "Slatkis"
                        },
                        new
                        {
                            Id = 3L,
                            Naziv = "Delikates"
                        },
                        new
                        {
                            Id = 4L,
                            Naziv = "Pice"
                        });
                });

            modelBuilder.Entity("Domen.Proizvod", b =>
                {
                    b.HasOne("Domen.JedinicaMere", "JedinicaMere")
                        .WithMany()
                        .HasForeignKey("JedinicaMereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domen.TipProizvoda", "TipProizvoda")
                        .WithMany()
                        .HasForeignKey("TipProizvodaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JedinicaMere");

                    b.Navigation("TipProizvoda");
                });

            modelBuilder.Entity("Domen.ProizvodDobavljac", b =>
                {
                    b.HasOne("Domen.Dobavljac", "Dobavljac")
                        .WithMany("Proizvodi")
                        .HasForeignKey("DobavljacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domen.Proizvod", "Proizvod")
                        .WithMany("Dobavljaci")
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dobavljac");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("Domen.Dobavljac", b =>
                {
                    b.Navigation("Proizvodi");
                });

            modelBuilder.Entity("Domen.Proizvod", b =>
                {
                    b.Navigation("Dobavljaci");
                });
#pragma warning restore 612, 618
        }
    }
}
